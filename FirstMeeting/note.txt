
_CRT_SECURE_NO_WARNINGS 警告
	Visual studio C++不是真正的C++，而是经过Microsoft公司优化的。
	在Visual studio中调用 scanf、sprintf、strcpy、strcat 等函数时,
	这些C函数功能内部没有对内存做边界检查，极有可能造成内存越界等问题，所以设置了不安全警告。

#define _CRT_SECURE_NO_WARNINGS 1
	作用：忽略不安全警告，
	位置：加到整个.c文件的第一行或添加到visual studio安装路径下的newc++.cpp文件中。
	ps：软件名：everything,可快速搜索出文件所在路径。

C6031警告
	此警告表明调用者不检查函数的返回值是否失败。
	根据调用的函数，此缺陷可能导致看似随机的程序错误行为。
	这包括错误情况或资源不足情况下的崩溃和数据损坏。
	一般来说，如果对某些函数的调用会需要磁盘、网络、内存或其他资源，
	则不能放心地假设这些调用一定会成功。
	调用方应始终检查返回值并适当地处理错误情况。
	还要考虑使用 _Must_inspect_result_ 批注，
	以检查该值是否用一种有效的方式检查。

#pragma warning(disable:6031)
	作用：忽略返回值，因为被调用函数可能返回意外值。

stdio.h
	C语言的标准输入输出头文件
	std:standard
	i:input
	o:output
	h:head

ASCII
	American Standard Code for Information Interchange 美国信息交换标准码

推荐:B站《蛋哥讲	C语言深度解剖》

static关键字
	在C语言中,static是用来修饰变量和函数的
	1. 修饰局部变量-称为静态局部变量
	2. 修饰全局变量-称为静态全局变量
	3. 修饰函数-称为静态函数
	
	链接属性：分无链接属性（局部变量），内部链接属性（static），外部链接属性（）。

#define指令 
	定义常量和宏（预处理）
	定义宏
	格式:#define 宏名(参数列表) (宏体)
	宏无类型检查，参数替换，不是传递。

内存
	   电脑上特别重要的存储器，计算机中程序的运行都是在内存中进行的 。
	所以为了有效的使用内存，就把内存划分成一个个小的内存单元，每个内存单元的大小是1个字节。
	为了能够有效的访问到内存的每个单元，就给内存单元进行了编号，这些编号被称为该内存单元的地址。

	指针 = 地址 = 内存单元编号 

	指针大小
		即一个内存空间的大小(内存地址只是一个编号,代表一个内存空间,
	所以地址/指针的大小是指当前操作系统下，当前地址编号代表的那一段内存空间的大小，单位是字节。)

	以下内容有待求证

	电脑-->硬件-->内存-->磁芯(通过磁电转换存储信息)-->触发器(32个/64个)。
	ps:
		触发器有两个稳定状态，分别是高（逻辑值:1）和低（逻辑值:0）。
	因此1个触发器可以表示1位（bit）二进制数据（0/1）。

		人们为了在电脑中存储数字、字母及其他常用字符,实验将触发器连接成电路，
	用多个触发器产生的二进制序列表示这些字符。60年代IBM的System/360的EBCDIC编码
	和美国信息交换标准代码（ASCII）出现之后，统一将8个触发器（即8位）链接起来表示一个字符。
	这样CPU通过寻址线与内存相连，就能访问该内存中存储的数据。

	ps:
		ASCII编码标准指定计算机中字符共128个，并赋予十进制值0~127。
	其中值在32～126是计算机常用符号（共95个）；
	值32是空格，48～57是字符0~9十个阿拉伯数字；
	65～90为26个大写英文字母，97～122号为26个小写英文字母，
	其余为一些标点符号、运算符号等。

		所以用8位存储一个字符，其中7位（二进制数0000000～1111111，化为十进制数是0～127，
	共128个二进制序列）表示128个字符剩下1位为符号位代表+-，命名其单位为字节（byte）。

		在32位操作系统中，32根寻址线对应的内存有32bit地址线，能产生2的32次方种电信号：
								00000000000000000000000000000000
								00000000000000000000000000000001
								00000000000000000000000000000010
								......
								01111111111111111111111111111111
								10000000000000000000000000000000
								10000000000000000000000000000001
								......
								11111111111111111111111111111111
	称为内存空间，把内存空间里的每种电信号进行编号，这个编号就是地址。
	所以在32位操作系统中，一个地址的大小为4个字节，在64位操作系统中，一个地址的大小为8个字节。